---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'GitHub bot pipeline'
Resources:
  Bucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
  Repository:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: 'github-bot'
  ProjectRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'codebuild.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/codebuild/${AWS::StackName}'
      RetentionInDays: 14
  Project:
    DependsOn: LogGroup
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        EnvironmentVariables:
        - Name: BUCKET_NAME
          Type: PLAINTEXT
          Value: !Ref Bucket
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'amazonlinux:2.0.20180622.1'
        Type: 'LINUX_CONTAINER'
      Name: !Ref 'AWS::StackName'
      ServiceRole: !GetAtt 'ProjectRole.Arn'
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
      TimeoutInMinutes: 10
  RuleRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'events.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'root'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: 'codepipeline:StartPipelineExecution'
            Resource: !Sub 'arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
  Rule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
        - 'aws.codecommit'
        'detail-type':
        - 'CodeCommit Repository State Change'
        resources:
        - !GetAtt 'Repository.Arn'
        detail:
          referenceType:
          - branch
          referenceName:
          - master
      State: ENABLED
      Targets:
      - Arn: !Sub 'arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}'
        Id: pipeline
        RoleArn: !GetAtt 'RuleRole.Arn'
  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'codepipeline.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref Bucket
      Name: 'github-bot'
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'PipelineRole.Arn'
      Stages:
      - Name: Source
        Actions:
        - Name: FetchSource
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: '1'
          Configuration:
            RepositoryName: !GetAtt 'Repository.Name'
            BranchName: master
            PollForSourceChanges: false
          OutputArtifacts:
          - Name: Source
          RunOrder: 1
      - Name: Production
        Actions:
        - Name: BuildTestAndDeploy
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName: !Ref Project
          InputArtifacts:
          - Name: Source
          RunOrder: 1
Outputs:
  Bucket:
    Description: 'The artifacts bucket'
    Value: !Ref Bucket
  GitCloneUrl:
    Description: 'The HTTPS clone URL of the repository'
    Value: !GetAtt 'Repository.CloneUrlHttp'
